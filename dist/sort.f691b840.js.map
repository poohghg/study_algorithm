{"version":3,"sources":["src/6.sort/sort.js"],"names":["jsSort","arr","console","log","sort","a","b","bubbleSort","swap","inx1","inx2","temp","i","length","j","refactBubbleSort","isSwap","selectionSort","minIndex","insertionSort","idx1","idx2","curV","lastJ","mergeSort","merge","arr1","arr2","newArr","push","middle","Math","floor","left","slice","right","refactMergeSort","splitArr","quickSort","refactQuickSort","pivot","selectedPivot","index","start","end","swapIdx","main","pivotIndex","qsort","curPivot","radixSort","getDigit","num","digit","abs","getMaxCnt","max","digitCount","log10","forEach","cnt","maxCnt","buffer","Array","from","concat","rSort","nums","getNumsLen","toString","v","curVLen","k"],"mappings":";;;;;;;;;;;;AAAA,SAASA,MAAT,CAAgBC,GAAhB,EAAqB;AACnB;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAAS,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAUD,CAAC,GAAGC,CAAd;AAAA,GAAT,CAAZ,EAHmB,CAInB;AACA;;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAAS,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAUA,CAAC,GAAGD,CAAd;AAAA,GAAT,CAAZ;AACD;;AAED,SAASE,UAAT,CAAoBN,GAApB,EAAyB;AACvB,WAASO,IAAT,CAAcP,GAAd,EAAmBQ,IAAnB,EAAyBC,IAAzB,EAA+B;AAC7B,QAAIC,IAAI,GAAGV,GAAG,CAACQ,IAAD,CAAd;AACAR,IAAAA,GAAG,CAACQ,IAAD,CAAH,GAAYR,GAAG,CAACS,IAAD,CAAf;AACAT,IAAAA,GAAG,CAACS,IAAD,CAAH,GAAYC,IAAZ;AACD;;AACD,OAAK,IAAIC,CAAC,GAAGX,GAAG,CAACY,MAAjB,EAAyBD,CAAC,IAAI,CAA9B,EAAiCA,CAAC,EAAlC,EAAsC;AACpC,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAAC,GAAG,CAAxB,EAA2BE,CAAC,EAA5B,EAAgC;AAC9B,UAAIb,GAAG,CAACa,CAAD,CAAH,GAASb,GAAG,CAACa,CAAC,GAAG,CAAL,CAAhB,EAAyBN,IAAI,CAACP,GAAD,EAAMa,CAAN,EAASA,CAAC,GAAG,CAAb,CAAJ;AAC1B;AACF;;AACD,SAAOb,GAAP;AACD;;AAED,SAASc,gBAAT,CAA0Bd,GAA1B,EAA+B;AAC7B,WAASO,IAAT,CAAcP,GAAd,EAAmBQ,IAAnB,EAAyBC,IAAzB,EAA+B;AAC7B,QAAIC,IAAI,GAAGV,GAAG,CAACQ,IAAD,CAAd;AACAR,IAAAA,GAAG,CAACQ,IAAD,CAAH,GAAYR,GAAG,CAACS,IAAD,CAAf;AACAT,IAAAA,GAAG,CAACS,IAAD,CAAH,GAAYC,IAAZ;AACD,GAL4B,CAM7B;;;AACA,OAAK,IAAIC,CAAC,GAAGX,GAAG,CAACY,MAAjB,EAAyBD,CAAC,GAAG,CAA7B,EAAgCA,CAAC,EAAjC,EAAqC;AACnC;AACA,QAAII,MAAM,GAAG,IAAb;;AACA,SAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAAC,GAAG,CAAxB,EAA2BE,CAAC,EAA5B,EAAgC;AAC9B,UAAIb,GAAG,CAACa,CAAD,CAAH,GAASb,GAAG,CAACa,CAAC,GAAG,CAAL,CAAhB,EAAyB;AACvBN,QAAAA,IAAI,CAACP,GAAD,EAAMa,CAAN,EAASA,CAAC,GAAG,CAAb,CAAJ;AACAE,QAAAA,MAAM,GAAG,KAAT;AACD;AACF;;AACD,QAAIA,MAAJ,EAAY;AACV;AACD;AACF;;AACD,SAAOf,GAAP;AACD,EACD;;;AAEA,SAASgB,aAAT,CAAuBhB,GAAvB,EAA4B;AAC1B,WAASO,IAAT,CAAcP,GAAd,EAAmBQ,IAAnB,EAAyBC,IAAzB,EAA+B;AAC7B,QAAMC,IAAI,GAAGV,GAAG,CAACQ,IAAD,CAAhB;AACAR,IAAAA,GAAG,CAACQ,IAAD,CAAH,GAAYR,GAAG,CAACS,IAAD,CAAf;AACAT,IAAAA,GAAG,CAACS,IAAD,CAAH,GAAYC,IAAZ;AACD;;AAED,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,GAAG,CAACY,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,QAAIM,QAAQ,GAAGN,CAAf;;AACA,SAAK,IAAIE,CAAC,GAAGF,CAAC,GAAG,CAAjB,EAAoBE,CAAC,GAAGb,GAAG,CAACY,MAA5B,EAAoCC,CAAC,EAArC,EAAyC;AACvC,UAAIb,GAAG,CAACiB,QAAD,CAAH,GAAgBjB,GAAG,CAACa,CAAD,CAAvB,EAA4BI,QAAQ,GAAGJ,CAAX;AAC7B;;AACD,QAAIF,CAAC,KAAKM,QAAV,EAAoB;AAClBV,MAAAA,IAAI,CAACP,GAAD,EAAMW,CAAN,EAASM,QAAT,CAAJ;AACD;AACF;;AACD,SAAOjB,GAAP;AACD,EACD;;;AAEA,SAASkB,aAAT,CAAuBlB,GAAvB,EAA4B;AAC1B,WAASO,IAAT,CAAcP,GAAd,EAAmBmB,IAAnB,EAAyBC,IAAzB,EAA+B;AAC7B,QAAMV,IAAI,GAAGV,GAAG,CAACmB,IAAD,CAAhB;AACAnB,IAAAA,GAAG,CAACmB,IAAD,CAAH,GAAYnB,GAAG,CAACoB,IAAD,CAAf;AACApB,IAAAA,GAAG,CAACoB,IAAD,CAAH,GAAYV,IAAZ;AACD;;AAED,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,GAAG,CAACY,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,QAAMU,IAAI,GAAGrB,GAAG,CAACW,CAAD,CAAhB;AACA,QAAIW,KAAK,SAAT,CAFmC,CAGnC;;AACA,SAAK,IAAIT,CAAC,GAAGF,CAAC,GAAG,CAAjB,EAAoBE,CAAC,IAAI,CAAL,IAAUb,GAAG,CAACa,CAAD,CAAH,GAASQ,IAAvC,EAA6CR,CAAC,EAA9C,EAAkD;AAChDb,MAAAA,GAAG,CAACa,CAAC,GAAG,CAAL,CAAH,GAAab,GAAG,CAACa,CAAD,CAAhB;AACAS,MAAAA,KAAK,GAAGT,CAAR;AACD;;AACD,QAAIS,KAAK,IAAI,CAAb,EAAgBtB,GAAG,CAACsB,KAAD,CAAH,GAAaD,IAAb;AACjB;;AACD,SAAOrB,GAAP;AACD,EACD;AACA;;;AAEA,SAASuB,SAAT,CAAmBvB,GAAnB,EAAwB;AACtB,WAASwB,KAAT,CAAeC,IAAf,EAAqBC,IAArB,EAA2B;AACzB,QAAIf,CAAC,GAAG,CAAR;AAAA,QACEE,CAAC,GAAG,CADN;AAAA,QAEEc,MAAM,GAAG,EAFX;;AAIA,WAAOhB,CAAC,GAAGc,IAAI,CAACb,MAAT,IAAmBC,CAAC,GAAGa,IAAI,CAACd,MAAnC,EAA2C;AACzC,UAAIa,IAAI,CAACd,CAAD,CAAJ,GAAUe,IAAI,CAACb,CAAD,CAAlB,EAAuB;AACrBc,QAAAA,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACd,CAAD,CAAhB;AACAA,QAAAA,CAAC;AACF,OAHD,MAGO;AACLgB,QAAAA,MAAM,CAACC,IAAP,CAAYF,IAAI,CAACb,CAAD,CAAhB;AACAA,QAAAA,CAAC;AACF;AACF;;AACD,WAAOF,CAAC,GAAGc,IAAI,CAACb,MAAhB,EAAwB;AACtBe,MAAAA,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACd,CAAD,CAAhB;AACAA,MAAAA,CAAC;AACF;;AACD,WAAOE,CAAC,GAAGa,IAAI,CAACd,MAAhB,EAAwB;AACtBe,MAAAA,MAAM,CAACC,IAAP,CAAYF,IAAI,CAACb,CAAD,CAAhB;AACAA,MAAAA,CAAC;AACF;;AAED,WAAOc,MAAP;AACD;;AAED,WAASxB,IAAT,CAAcH,GAAd,EAAmB;AACjB,QAAIA,GAAG,CAACY,MAAJ,IAAc,CAAlB,EAAqB,OAAOZ,GAAP;AACrB,QAAM6B,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAW/B,GAAG,CAACY,MAAJ,GAAa,CAAxB,CAAf;AACA,QAAMoB,IAAI,GAAG7B,IAAI,CAACH,GAAG,CAACiC,KAAJ,CAAU,CAAV,EAAaJ,MAAb,CAAD,CAAjB;AACA,QAAMK,KAAK,GAAG/B,IAAI,CAACH,GAAG,CAACiC,KAAJ,CAAUJ,MAAV,CAAD,CAAlB;AACA,WAAOL,KAAK,CAACQ,IAAD,EAAOE,KAAP,CAAZ;AACD;;AACD,SAAO/B,IAAI,CAACH,GAAD,CAAX;AACD,EACD;;;AACA,SAASmC,eAAT,CAAyBnC,GAAzB,EAA8B;AAC5B,WAASwB,KAAT,CAAeC,IAAf,EAAqBC,IAArB,EAA2B;AACzB,QAAIf,CAAC,GAAG,CAAR;AAAA,QACEE,CAAC,GAAG,CADN;AAAA,QAEEc,MAAM,GAAG,EAFX;;AAIA,WAAOhB,CAAC,GAAGc,IAAI,CAACb,MAAT,IAAmBC,CAAC,GAAGa,IAAI,CAACd,MAAnC,EAA2C;AACzC,UAAIa,IAAI,CAACd,CAAD,CAAJ,GAAUe,IAAI,CAACb,CAAD,CAAlB,EAAuB;AACrBc,QAAAA,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACd,CAAD,CAAhB;AACAA,QAAAA,CAAC;AACF,OAHD,MAGO;AACLgB,QAAAA,MAAM,CAACC,IAAP,CAAYF,IAAI,CAACb,CAAD,CAAhB;AACAA,QAAAA,CAAC;AACF;AACF;;AACD,WAAOF,CAAC,GAAGc,IAAI,CAACb,MAAhB,EAAwB;AACtBe,MAAAA,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACd,CAAD,CAAhB;AACAA,MAAAA,CAAC;AACF;;AACD,WAAOE,CAAC,GAAGa,IAAI,CAACd,MAAhB,EAAwB;AACtBe,MAAAA,MAAM,CAACC,IAAP,CAAYF,IAAI,CAACb,CAAD,CAAhB;AACAA,MAAAA,CAAC;AACF;;AACD,WAAOc,MAAP;AACD;;AAED,WAASS,QAAT,CAAkBpC,GAAlB,EAAuB;AACrB;AACA,QAAIA,GAAG,CAACY,MAAJ,IAAc,CAAlB,EAAqB,OAAOZ,GAAP;AACrB,QAAM6B,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAW/B,GAAG,CAACY,MAAJ,GAAa,CAAxB,CAAf;AACA,QAAMoB,IAAI,GAAGI,QAAQ,CAACpC,GAAG,CAACiC,KAAJ,CAAU,CAAV,EAAaJ,MAAb,CAAD,CAArB;AACA,QAAMK,KAAK,GAAGE,QAAQ,CAACpC,GAAG,CAACiC,KAAJ,CAAUJ,MAAV,CAAD,CAAtB;AACA,WAAOL,KAAK,CAACQ,IAAD,EAAOE,KAAP,CAAZ;AACD;;AACD,SAAOE,QAAQ,CAACpC,GAAD,CAAf;AACD,EACD;;;AACA,SAASqC,SAAT,CAAmBrC,GAAnB,EAAwB;AACtB,WAASsC,eAAT,CAAyBtC,GAAzB,EAA8B;AAC5B,aAASO,IAAT,CAAcP,GAAd,EAAmBW,CAAnB,EAAsBE,CAAtB,EAAyB;AACvB,UAAIF,CAAC,KAAKE,CAAV,EAAa;AACb,UAAMH,IAAI,GAAGV,GAAG,CAACW,CAAD,CAAhB;AACAX,MAAAA,GAAG,CAACW,CAAD,CAAH,GAASX,GAAG,CAACa,CAAD,CAAZ;AACAb,MAAAA,GAAG,CAACa,CAAD,CAAH,GAASH,IAAT;AACD;;AAED,aAAS6B,KAAT,CAAevC,GAAf,EAAoB;AAClB,UAAIA,GAAG,CAACY,MAAJ,IAAc,CAAlB,EAAqB,OAAOZ,GAAP;AACrB,UAAMwC,aAAa,GAAGxC,GAAG,CAAC,CAAD,CAAzB;AACA,UAAIyC,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAI9B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,GAAG,CAACY,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC;AACA;AACA,YAAIX,GAAG,CAACW,CAAD,CAAH,GAAS6B,aAAb,EAA4B;AAC1BxC,UAAAA,GAAG,CAACyC,KAAD,CAAH,GAAazC,GAAG,CAACW,CAAD,CAAhB;AACAX,UAAAA,GAAG,CAACW,CAAD,CAAH,GAASX,GAAG,CAACyC,KAAK,GAAG,CAAT,CAAZ;AACAA,UAAAA,KAAK;AACN;AACF;;AACDzC,MAAAA,GAAG,CAACyC,KAAD,CAAH,GAAaD,aAAb;AACA,aAAOC,KAAP;AACD;;AACDF,IAAAA,KAAK,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAD,CAAL;AACD;;AAED,WAASA,KAAT,CAAevC,GAAf,EAAoB0C,KAApB,EAA2BC,GAA3B,EAAgC;AAC9B,QAAMH,aAAa,GAAGxC,GAAG,CAAC0C,KAAD,CAAzB,CAD8B,CAE9B;;AACA,QAAIE,OAAO,GAAGF,KAAd;;AACA,SAAK,IAAI/B,CAAC,GAAG+B,KAAK,GAAG,CAArB,EAAwB/B,CAAC,IAAIgC,GAA7B,EAAkChC,CAAC,EAAnC,EAAuC;AACrC,UAAI6B,aAAa,GAAGxC,GAAG,CAACW,CAAD,CAAvB,EAA4B;AAC1BiC,QAAAA,OAAO;AACPrC,QAAAA,IAAI,CAACP,GAAD,EAAM4C,OAAN,EAAejC,CAAf,CAAJ;AACD;AACF;;AACDJ,IAAAA,IAAI,CAACP,GAAD,EAAM0C,KAAN,EAAaE,OAAb,CAAJ;AACA,WAAOA,OAAP;AACD;;AAED,WAASC,IAAT,CAAc7C,GAAd,EAAmBgC,IAAnB,EAAyBE,KAAzB,EAAgC;AAC9B,QAAIF,IAAI,GAAGE,KAAX,EAAkB;AAChB,UAAIY,UAAU,GAAGP,KAAK,CAACvC,GAAD,EAAMgC,IAAN,EAAYE,KAAZ,CAAtB;AACAW,MAAAA,IAAI,CAAC7C,GAAD,EAAMgC,IAAN,EAAYc,UAAU,GAAG,CAAzB,CAAJ;AACAD,MAAAA,IAAI,CAAC7C,GAAD,EAAM8C,UAAU,GAAG,CAAnB,EAAsBZ,KAAtB,CAAJ;AACD;;AACD,WAAOlC,GAAP;AACD;;AACD6C,EAAAA,IAAI,CAAC7C,GAAD,EAAM,CAAN,EAASA,GAAG,CAACY,MAAJ,GAAa,CAAtB,CAAJ;AACA,SAAOZ,GAAP;AACD;;AAED,SAAS+C,KAAT,CAAe/C,GAAf,EAAoB;AAClB,WAASO,IAAT,CAAcP,GAAd,EAAmBW,CAAnB,EAAsBE,CAAtB,EAAyB;AACvB,QAAIF,CAAC,KAAKE,CAAV,EAAa;AACb,QAAMH,IAAI,GAAGV,GAAG,CAACW,CAAD,CAAhB;AACAX,IAAAA,GAAG,CAACW,CAAD,CAAH,GAASX,GAAG,CAACa,CAAD,CAAZ;AACAb,IAAAA,GAAG,CAACa,CAAD,CAAH,GAASH,IAAT;AACD;;AAED,WAAS6B,KAAT,CAAevC,GAAf,EAAoB0C,KAApB,EAA2BC,GAA3B,EAAgC;AAC9B,QAAId,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACW,KAAK,GAAGC,GAAT,IAAgB,CAA3B,CAAb;AACA,QAAMK,QAAQ,GAAGhD,GAAG,CAAC6B,MAAD,CAApB;AACA,QAAIY,KAAK,GAAGZ,MAAZ;;AACA,SAAK,IAAIlB,CAAC,GAAG+B,KAAb,EAAoB/B,CAAC,IAAIgC,GAAzB,EAA8BhC,CAAC,EAA/B,EAAmC;AACjC,UAAIA,CAAC,GAAGkB,MAAJ,IAAc7B,GAAG,CAACW,CAAD,CAAH,GAASqC,QAA3B,EAAqC;AACnCP,QAAAA,KAAK;AACLlC,QAAAA,IAAI,CAACP,GAAD,EAAMyC,KAAN,EAAa9B,CAAb,CAAJ;AACD,OAHD,MAGO,IAAIA,CAAC,GAAGkB,MAAJ,IAAc7B,GAAG,CAACW,CAAD,CAAH,GAASqC,QAA3B,EAAqC;AAC1CP,QAAAA,KAAK;AACLlC,QAAAA,IAAI,CAACP,GAAD,EAAMyC,KAAN,EAAa9B,CAAb,CAAJ;AACD,OAHM,MAGA,IAAIA,CAAC,KAAKkB,MAAV,EAAkB;AACvBtB,QAAAA,IAAI,CAACP,GAAD,EAAM6B,MAAN,EAAcY,KAAd,CAAJ,CADuB,CAEvB;;AACAZ,QAAAA,MAAM,GAAGY,KAAT;AACD;AACF;;AACDlC,IAAAA,IAAI,CAACP,GAAD,EAAM6B,MAAN,EAAcY,KAAd,CAAJ;AACA,WAAOA,KAAP;AACD;;AAED,WAASI,IAAT,CAAc7C,GAAd,EAAmBgC,IAAnB,EAAyBE,KAAzB,EAAgC;AAC9B,QAAIF,IAAI,GAAGE,KAAX,EAAkB;AAChB,UAAIY,UAAU,GAAGP,KAAK,CAACvC,GAAD,EAAMgC,IAAN,EAAYE,KAAZ,CAAtB;AACAjC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B4C,UAA1B;AACAD,MAAAA,IAAI,CAAC7C,GAAD,EAAMgC,IAAN,EAAYc,UAAU,GAAG,CAAzB,CAAJ;AACAD,MAAAA,IAAI,CAAC7C,GAAD,EAAM8C,UAAU,GAAG,CAAnB,EAAsBZ,KAAtB,CAAJ;AACD;;AACD,WAAOlC,GAAP;AACD;;AACD6C,EAAAA,IAAI,CAAC7C,GAAD,EAAM,CAAN,EAASA,GAAG,CAACY,MAAJ,GAAa,CAAtB,CAAJ;AACA,SAAOZ,GAAP;AACD,EAED;AACA;;;AAEA,SAASiD,SAAT,CAAmBjD,GAAnB,EAAwB;AACtB;AACA;AACA,WAASkD,QAAT,CAAkBC,GAAlB,EAAuBC,KAAvB,EAA8B;AAC5B,WAAOtB,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACuB,GAAL,CAASF,GAAT,aAAgB,EAAhB,EAAsBC,KAAtB,CAAD,GAAgC,EAA3C,CAAP;AACD;;AACD,WAASE,SAAT,CAAmBtD,GAAnB,EAAwB;AACtB,QAAIuD,GAAG,GAAG,CAAV,CADsB,CAEtB;;AACA,aAASC,UAAT,CAAoBL,GAApB,EAAyB;AACvB,UAAIA,GAAG,KAAK,CAAZ,EAAe,OAAO,CAAP;AACf,aAAOrB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAAC2B,KAAL,CAAW3B,IAAI,CAACuB,GAAL,CAASF,GAAT,CAAX,IAA4B,CAAvC,CAAP,CAFuB,CAGvB;AACD;;AACDnD,IAAAA,GAAG,CAAC0D,OAAJ,CAAY,UAAC/C,CAAD,EAAO;AACjB,UAAMgD,GAAG,GAAGH,UAAU,CAAC7C,CAAD,CAAtB;AACA,UAAIgD,GAAG,GAAGJ,GAAV,EAAeA,GAAG,GAAGI,GAAN;AAChB,KAHD;AAIA,WAAOJ,GAAP;AACD;;AACD,MAAMK,MAAM,GAAGN,SAAS,CAACtD,GAAD,CAAxB,CApBsB,CAqBtB;;AACA,OAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiD,MAApB,EAA4BjD,CAAC,EAA7B,EAAiC;AAAA;;AAC/B,QAAMkD,MAAM,GAAGC,KAAK,CAACC,IAAN,CAAW;AAAEnD,MAAAA,MAAM,EAAE;AAAV,KAAX,EAA2B;AAAA,aAAM,EAAN;AAAA,KAA3B,CAAf;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,GAAG,CAACY,MAAxB,EAAgCC,CAAC,EAAjC,EAAqC;AACnC,UAAMuC,KAAK,GAAGF,QAAQ,CAAClD,GAAG,CAACa,CAAD,CAAJ,EAASF,CAAT,CAAtB;AACAkD,MAAAA,MAAM,CAACT,KAAD,CAAN,CAAcxB,IAAd,CAAmB5B,GAAG,CAACa,CAAD,CAAtB;AACD;;AACDb,IAAAA,GAAG,GAAG,YAAGgE,MAAH,gCAAaH,MAAb,EAAN;AACD;;AACD,SAAO7D,GAAP;AACD;;AACDiD,SAAS,CAAC,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,CAAb,EAAgB,CAAhB,EAAmB,EAAnB,EAAuB,CAAvB,CAAD,CAAT;;AAEA,SAASgB,KAAT,CAAejE,GAAf,EAAoB;AAClB,MAAMkD,QAAQ,GAAG,SAAXA,QAAW,CAACgB,IAAD,EAAOd,KAAP;AAAA,WACftB,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACuB,GAAL,CAASa,IAAT,aAAiB,EAAjB,EAAuBd,KAAvB,CAAD,GAAiC,EAA5C,CADe;AAAA,GAAjB;;AAGA,MAAME,SAAS,GAAG,SAAZA,SAAY,CAACtD,GAAD,EAAS;AACzB,QAAIuD,GAAG,GAAG,CAAV;;AACA,QAAMY,UAAU,GAAG,SAAbA,UAAa,CAAChB,GAAD;AAAA,aAASA,GAAG,CAACiB,QAAJ,GAAexD,MAAxB;AAAA,KAAnB;;AACAZ,IAAAA,GAAG,CAAC0D,OAAJ,CAAY,UAACW,CAAD,EAAO;AACjB,UAAMC,OAAO,GAAGH,UAAU,CAACE,CAAD,CAA1B;AACA,UAAIC,OAAO,GAAGf,GAAd,EAAmBA,GAAG,GAAGe,OAAN;AACpB,KAHD;AAIA,WAAOf,GAAP;AACD,GARD,CAJkB,CAclB;;;AACA,MAAMK,MAAM,GAAGN,SAAS,CAACtD,GAAD,CAAxB;;AACA,OAAK,IAAIuE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,MAApB,EAA4BW,CAAC,EAA7B,EAAiC;AAAA;;AAC/B,QAAMV,MAAM,GAAGC,KAAK,CAACC,IAAN,CAAW;AAAEnD,MAAAA,MAAM,EAAE;AAAV,KAAX,EAA2B;AAAA,aAAM,EAAN;AAAA,KAA3B,CAAf;;AACA,SAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,GAAG,CAACY,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,UAAMyC,KAAK,GAAGF,QAAQ,CAAClD,GAAG,CAACW,CAAD,CAAJ,EAAS4D,CAAT,CAAtB;AACAV,MAAAA,MAAM,CAACT,KAAD,CAAN,CAAcxB,IAAd,CAAmB5B,GAAG,CAACW,CAAD,CAAtB;AACD,KAL8B,CAM/B;;;AACAX,IAAAA,GAAG,GAAG,aAAGgE,MAAH,iCAAaH,MAAb,EAAN;AACD;;AACD5D,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,SAAOA,GAAP;AACD;;AAEDiE,KAAK,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,EAAc,GAAd,CAAD,CAAL","file":"sort.f691b840.js","sourceRoot":"..","sourcesContent":["function jsSort(arr) {\n  // 올림차순\n  // -(음수)를 반환하면 a,b\n  console.log(arr.sort((a, b) => a - b));\n  // 내림차순\n  // +(양수)를 반환하면 b,a\n  console.log(arr.sort((a, b) => b - a));\n}\n\nfunction bubbleSort(arr) {\n  function swap(arr, inx1, inx2) {\n    let temp = arr[inx1];\n    arr[inx1] = arr[inx2];\n    arr[inx2] = temp;\n  }\n  for (let i = arr.length; i >= 1; i--) {\n    for (let j = 0; j < i - 1; j++) {\n      if (arr[j] > arr[j + 1]) swap(arr, j, j + 1);\n    }\n  }\n  return arr;\n}\n\nfunction refactBubbleSort(arr) {\n  function swap(arr, inx1, inx2) {\n    let temp = arr[inx1];\n    arr[inx1] = arr[inx2];\n    arr[inx2] = temp;\n  }\n  // 비교를 수행할 횟수.\n  for (let i = arr.length; i > 0; i--) {\n    // 현재루프에서 스왑을 하고있는지 확인.\n    let isSwap = true;\n    for (let j = 0; j < i - 1; j++) {\n      if (arr[j] > arr[j + 1]) {\n        swap(arr, j, j + 1);\n        isSwap = false;\n      }\n    }\n    if (isSwap) {\n      break;\n    }\n  }\n  return arr;\n}\n// console.log(refactBubbleSort([1, 2, 3, 5, 6, 3]));\n\nfunction selectionSort(arr) {\n  function swap(arr, inx1, inx2) {\n    const temp = arr[inx1];\n    arr[inx1] = arr[inx2];\n    arr[inx2] = temp;\n  }\n\n  for (let i = 0; i < arr.length; i++) {\n    let minIndex = i;\n    for (let j = i + 1; j < arr.length; j++) {\n      if (arr[minIndex] > arr[j]) minIndex = j;\n    }\n    if (i !== minIndex) {\n      swap(arr, i, minIndex);\n    }\n  }\n  return arr;\n}\n// console.log(selectionSort([4, 1, 2, 3]));\n\nfunction insertionSort(arr) {\n  function swap(arr, idx1, idx2) {\n    const temp = arr[idx1];\n    arr[idx1] = arr[idx2];\n    arr[idx2] = temp;\n  }\n\n  for (let i = 1; i < arr.length; i++) {\n    const curV = arr[i];\n    let lastJ;\n    // 순서를 바꿔야 하는 조건\n    for (let j = i - 1; j >= 0 && arr[j] > curV; j--) {\n      arr[j + 1] = arr[j];\n      lastJ = j;\n    }\n    if (lastJ >= 0) arr[lastJ] = curV;\n  }\n  return arr;\n}\n// console.log(insertionSort([1, 0, 1, 2, 3, 0]));\n// 1, 2, 0, 3;\n\nfunction mergeSort(arr) {\n  function merge(arr1, arr2) {\n    let i = 0,\n      j = 0,\n      newArr = [];\n\n    while (i < arr1.length && j < arr2.length) {\n      if (arr1[i] < arr2[j]) {\n        newArr.push(arr1[i]);\n        i++;\n      } else {\n        newArr.push(arr2[j]);\n        j++;\n      }\n    }\n    while (i < arr1.length) {\n      newArr.push(arr1[i]);\n      i++;\n    }\n    while (j < arr2.length) {\n      newArr.push(arr2[j]);\n      j++;\n    }\n\n    return newArr;\n  }\n\n  function sort(arr) {\n    if (arr.length <= 1) return arr;\n    const middle = Math.floor(arr.length / 2);\n    const left = sort(arr.slice(0, middle));\n    const right = sort(arr.slice(middle));\n    return merge(left, right);\n  }\n  return sort(arr);\n}\n// console.log(mergeSort([1, 0, 1, 2, 3, 0]));\nfunction refactMergeSort(arr) {\n  function merge(arr1, arr2) {\n    let i = 0,\n      j = 0,\n      newArr = [];\n\n    while (i < arr1.length && j < arr2.length) {\n      if (arr1[i] < arr2[j]) {\n        newArr.push(arr1[i]);\n        i++;\n      } else {\n        newArr.push(arr2[j]);\n        j++;\n      }\n    }\n    while (i < arr1.length) {\n      newArr.push(arr1[i]);\n      i++;\n    }\n    while (j < arr2.length) {\n      newArr.push(arr2[j]);\n      j++;\n    }\n    return newArr;\n  }\n\n  function splitArr(arr) {\n    // console.log(arr);\n    if (arr.length <= 1) return arr;\n    const middle = Math.floor(arr.length / 2);\n    const left = splitArr(arr.slice(0, middle));\n    const right = splitArr(arr.slice(middle));\n    return merge(left, right);\n  }\n  return splitArr(arr);\n}\n// console.log(refactMergeSort([1, 0, 1, 2]));\nfunction quickSort(arr) {\n  function refactQuickSort(arr) {\n    function swap(arr, i, j) {\n      if (i === j) return;\n      const temp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = temp;\n    }\n\n    function pivot(arr) {\n      if (arr.length <= 1) return arr;\n      const selectedPivot = arr[0];\n      let index = 0;\n      for (let i = 1; i < arr.length; i++) {\n        // 피벗값보다 작은면 왼쪽\n        // 아니면 오른쪽으로 배열을 정렬하자\n        if (arr[i] < selectedPivot) {\n          arr[index] = arr[i];\n          arr[i] = arr[index + 1];\n          index++;\n        }\n      }\n      arr[index] = selectedPivot;\n      return index;\n    }\n    pivot([5, 1, 7, 9, 1]);\n  }\n\n  function pivot(arr, start, end) {\n    const selectedPivot = arr[start];\n    // 피봇의 index, 피봇값의 자리\n    let swapIdx = start;\n    for (let i = start + 1; i <= end; i++) {\n      if (selectedPivot > arr[i]) {\n        swapIdx++;\n        swap(arr, swapIdx, i);\n      }\n    }\n    swap(arr, start, swapIdx);\n    return swapIdx;\n  }\n\n  function main(arr, left, right) {\n    if (left < right) {\n      let pivotIndex = pivot(arr, left, right);\n      main(arr, left, pivotIndex - 1);\n      main(arr, pivotIndex + 1, right);\n    }\n    return arr;\n  }\n  main(arr, 0, arr.length - 1);\n  return arr;\n}\n\nfunction qsort(arr) {\n  function swap(arr, i, j) {\n    if (i === j) return;\n    const temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n\n  function pivot(arr, start, end) {\n    let middle = Math.floor((start + end) / 2);\n    const curPivot = arr[middle];\n    let index = middle;\n    for (let i = start; i <= end; i++) {\n      if (i < middle && arr[i] > curPivot) {\n        index--;\n        swap(arr, index, i);\n      } else if (i > middle && arr[i] < curPivot) {\n        index++;\n        swap(arr, index, i);\n      } else if (i === middle) {\n        swap(arr, middle, index);\n        // 현재 인덱스\n        middle = index;\n      }\n    }\n    swap(arr, middle, index);\n    return index;\n  }\n\n  function main(arr, left, right) {\n    if (left < right) {\n      let pivotIndex = pivot(arr, left, right);\n      console.log('pivotIndex', pivotIndex);\n      main(arr, left, pivotIndex - 1);\n      main(arr, pivotIndex + 1, right);\n    }\n    return arr;\n  }\n  main(arr, 0, arr.length - 1);\n  return arr;\n}\n\n// console.clear();\n// console.log(qsort([1, 5, 3, 4, 5, 1, 3, 12, 312, 31]));\n\nfunction radixSort(arr) {\n  // 수와 자릿수를 입력받아\n  // 해당 자릿수의 수를 리턴해주는 함수\n  function getDigit(num, digit) {\n    return Math.floor((Math.abs(num) / 10 ** digit) % 10);\n  }\n  function getMaxCnt(arr) {\n    let max = 0;\n    // 해당수가 몇의 자리수인지 구한다.\n    function digitCount(num) {\n      if (num === 0) return 1;\n      return Math.floor(Math.log10(Math.abs(num)) + 1);\n      // return num.toString().length;\n    }\n    arr.forEach((i) => {\n      const cnt = digitCount(i);\n      if (cnt > max) max = cnt;\n    });\n    return max;\n  }\n  const maxCnt = getMaxCnt(arr);\n  // const cnt\n  for (let i = 0; i < maxCnt; i++) {\n    const buffer = Array.from({ length: 10 }, () => []);\n    for (let j = 0; j < arr.length; j++) {\n      const digit = getDigit(arr[j], i);\n      buffer[digit].push(arr[j]);\n    }\n    arr = [].concat(...buffer);\n  }\n  return arr;\n}\nradixSort([1, 321, 12, 5, 3, 27, 1]);\n\nfunction rSort(arr) {\n  const getDigit = (nums, digit) =>\n    Math.floor((Math.abs(nums) / 10 ** digit) % 10);\n\n  const getMaxCnt = (arr) => {\n    let max = 0;\n    const getNumsLen = (num) => num.toString().length;\n    arr.forEach((v) => {\n      const curVLen = getNumsLen(v);\n      if (curVLen > max) max = curVLen;\n    });\n    return max;\n  };\n\n  // 최대 자릿수\n  const maxCnt = getMaxCnt(arr);\n  for (let k = 0; k < maxCnt; k++) {\n    const buffer = Array.from({ length: 10 }, () => []);\n    for (let i = 0; i < arr.length; i++) {\n      const digit = getDigit(arr[i], k);\n      buffer[digit].push(arr[i]);\n    }\n    // flatten\n    arr = [].concat(...buffer);\n  }\n  console.log(arr);\n  return arr;\n}\n\nrSort([3, 1, 3, 41, 312]);\n"]}